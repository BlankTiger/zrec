name: Generate kcov coverage
on: [push]
jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    name: Generate coverage
    steps:
      - uses: actions/checkout@v3
      - uses: mlugg/setup-zig@v1
        with:
          version: 0.15.0-dev.10+214750fcf

      - name: Build kcov
        run: |
          sudo apt-get update -y
          sudo apt-get install -y binutils-dev libssl-dev libcurl4-openssl-dev libelf-dev libstdc++-12-dev zlib1g-dev libdw-dev libiberty-dev
          git clone --depth 1 https://github.com/SimonKagstrom/kcov
          cd kcov && git fetch --depth 1 origin c71d42f1cadddbd2da38c1101d71ef2b84065c7b && git checkout c71d42f1cadddbd2da38c1101d71ef2b84065c7b && mkdir build && cd build && cmake .. && make && sudo make install

      - name: Run tests and get coverage
        id: test-stats
        run: |
          # Run tests with kcov, ignore exit code to ensure coverage output
          zig build test-kcov 2>&1 || true

          # Find the latest coverage.json in docs/test* and extract percent_covered
          COVERAGE_FILE=$(find docs/test* -name "coverage.json" -print0 | xargs -0 ls -t | head -n 1)
          if [ -f "$COVERAGE_FILE" ]; then
            COVERAGE=$(jq -r '.percent_covered' "$COVERAGE_FILE")
          else
            COVERAGE="0.00"
          fi
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT

      - name: Generate coverage badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_TOKEN }}
          gistID: 4520018b4162196dc185a4059fc2d8ac
          filename: coverage.json
          label: Coverage
          message: ${{ steps.test-stats.outputs.coverage }}%
          valColorRange: ${{ steps.test-stats.outputs.coverage }}
          maxColorRange: 100
          minColorRange: 50
          style: flat

      - name: Commit files
        run: |
          git config --global --add safe.directory /github/workspace
          git config --local user.email "kcov@test.com"
          git config --local user.name "kcov"
          git add docs
          git commit -m "coverage report" || echo "No changes to commit"

      - name: Force push to destination branch
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          force: true

      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
