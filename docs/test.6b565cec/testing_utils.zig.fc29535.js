var data = {lines:[
{"lineNum":"    1","line":"const std = @import(\"std\");"},
{"lineNum":"    2","line":"const Allocator = std.mem.Allocator;"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"pub fn create_directory_with_many_files(alloc: Allocator, dir_name: []const u8, file_count: usize, fs_path: []const u8) !void {","class":"lineCov","hits":"2","order":"976","possible_hits":"2",},
{"lineNum":"    5","line":"    const mount_result = try std.process.Child.run(.{","class":"lineCov","hits":"1","order":"977","possible_hits":"1",},
{"lineNum":"    6","line":"        .allocator = alloc,"},
{"lineNum":"    7","line":"        .argv = &.{ \"sudo\", \"mount\", \"-o\", \"loop\", \"-t\", \"ext2\", fs_path, \"mnt\" },"},
{"lineNum":"    8","line":"    });"},
{"lineNum":"    9","line":"    alloc.free(mount_result.stdout);","class":"lineCov","hits":"1","order":"978","possible_hits":"1",},
{"lineNum":"   10","line":"    alloc.free(mount_result.stderr);","class":"lineCov","hits":"1","order":"979","possible_hits":"1",},
{"lineNum":"   11","line":""},
{"lineNum":"   12","line":"    {"},
{"lineNum":"   13","line":"        const mkdir_path = try std.fmt.allocPrint(alloc, \"mnt/{s}\", .{dir_name});","class":"linePartCov","hits":"1","order":"980","possible_hits":"2",},
{"lineNum":"   14","line":"        defer alloc.free(mkdir_path);","class":"linePartCov","hits":"1","order":"991","possible_hits":"4",},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"        const mkdir_result = try std.process.Child.run(.{","class":"linePartCov","hits":"1","order":"981","possible_hits":"2",},
{"lineNum":"   17","line":"            .allocator = alloc,"},
{"lineNum":"   18","line":"            .argv = &.{ \"sudo\", \"mkdir\", \"-p\", mkdir_path },"},
{"lineNum":"   19","line":"        });"},
{"lineNum":"   20","line":"        alloc.free(mkdir_result.stdout);","class":"lineCov","hits":"1","order":"982","possible_hits":"1",},
{"lineNum":"   21","line":"        alloc.free(mkdir_result.stderr);","class":"lineCov","hits":"1","order":"983","possible_hits":"1",},
{"lineNum":"   22","line":""},
{"lineNum":"   23","line":"        for (0..file_count) |i| {","class":"lineCov","hits":"3","order":"984","possible_hits":"3",},
{"lineNum":"   24","line":"            const file_name = try std.fmt.allocPrint(alloc, \"mnt/{s}/file_{d}\", .{dir_name, i});","class":"linePartCov","hits":"1","order":"985","possible_hits":"3",},
{"lineNum":"   25","line":"            defer alloc.free(file_name);","class":"linePartCov","hits":"1","order":"989","possible_hits":"2",},
{"lineNum":"   26","line":""},
{"lineNum":"   27","line":"            const touch_result = try std.process.Child.run(.{","class":"linePartCov","hits":"1","order":"986","possible_hits":"2",},
{"lineNum":"   28","line":"                .allocator = alloc,"},
{"lineNum":"   29","line":"                .argv = &.{ \"sudo\", \"touch\", file_name },"},
{"lineNum":"   30","line":"            });"},
{"lineNum":"   31","line":"            alloc.free(touch_result.stdout);","class":"lineCov","hits":"1","order":"987","possible_hits":"1",},
{"lineNum":"   32","line":"            alloc.free(touch_result.stderr);","class":"lineCov","hits":"1","order":"988","possible_hits":"1",},
{"lineNum":"   33","line":"        }","class":"lineCov","hits":"3","order":"990","possible_hits":"3",},
{"lineNum":"   34","line":"    }"},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"    const umount_result = try std.process.Child.run(.{","class":"linePartCov","hits":"1","order":"992","possible_hits":"2",},
{"lineNum":"   37","line":"        .allocator = alloc,"},
{"lineNum":"   38","line":"        .argv = &.{ \"sudo\", \"umount\", \"mnt\" },"},
{"lineNum":"   39","line":"    });"},
{"lineNum":"   40","line":"    alloc.free(umount_result.stdout);","class":"lineCov","hits":"1","order":"993","possible_hits":"1",},
{"lineNum":"   41","line":"    alloc.free(umount_result.stderr);","class":"lineCov","hits":"1","order":"994","possible_hits":"1",},
{"lineNum":"   42","line":"}"},
{"lineNum":"   43","line":""},
{"lineNum":"   44","line":"pub fn cleanup_directory_with_files(alloc: Allocator, dir_name: []const u8, fs_path: []const u8) !void {","class":"lineCov","hits":"2","order":"1006","possible_hits":"2",},
{"lineNum":"   45","line":"    var is_mounted = false;","class":"lineCov","hits":"1","order":"1007","possible_hits":"1",},
{"lineNum":"   46","line":""},
{"lineNum":"   47","line":"    const mount_check = try std.process.Child.run(.{","class":"lineCov","hits":"1","order":"1008","possible_hits":"1",},
{"lineNum":"   48","line":"        .allocator = alloc,"},
{"lineNum":"   49","line":"        .argv = &.{ \"mount\" },"},
{"lineNum":"   50","line":"    });"},
{"lineNum":"   51","line":"    is_mounted = std.mem.indexOf(u8, mount_check.stdout, \"mnt\") != null;","class":"lineCov","hits":"1","order":"1009","possible_hits":"1",},
{"lineNum":"   52","line":"    alloc.free(mount_check.stdout);","class":"lineCov","hits":"1","order":"1010","possible_hits":"1",},
{"lineNum":"   53","line":"    alloc.free(mount_check.stderr);","class":"lineCov","hits":"1","order":"1011","possible_hits":"1",},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"    if (!is_mounted) {","class":"lineCov","hits":"1","order":"1012","possible_hits":"1",},
{"lineNum":"   56","line":"        const mount_result = try std.process.Child.run(.{","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   57","line":"            .allocator = alloc,"},
{"lineNum":"   58","line":"            .argv = &.{ \"sudo\", \"mount\", \"-o\", \"loop\", \"-t\", \"ext2\", fs_path, \"mnt\" },"},
{"lineNum":"   59","line":"        });"},
{"lineNum":"   60","line":"        alloc.free(mount_result.stdout);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   61","line":"        alloc.free(mount_result.stderr);","class":"linePartCov","hits":"1","order":"1013","possible_hits":"2",},
{"lineNum":"   62","line":"    }"},
{"lineNum":"   63","line":""},
{"lineNum":"   64","line":"    const rm_path = try std.fmt.allocPrint(alloc, \"mnt/{s}\", .{dir_name});","class":"linePartCov","hits":"1","order":"1014","possible_hits":"2",},
{"lineNum":"   65","line":"    defer alloc.free(rm_path);","class":"linePartCov","hits":"1","order":"1021","possible_hits":"2",},
{"lineNum":"   66","line":""},
{"lineNum":"   67","line":"    const rm_result = std.process.Child.run(.{","class":"lineCov","hits":"1","order":"1015","possible_hits":"1",},
{"lineNum":"   68","line":"        .allocator = alloc,"},
{"lineNum":"   69","line":"        .argv = &.{ \"sudo\", \"rm\", \"-rf\", rm_path },"},
{"lineNum":"   70","line":"    });"},
{"lineNum":"   71","line":""},
{"lineNum":"   72","line":"    if (rm_result) |res| {","class":"lineCov","hits":"2","order":"1016","possible_hits":"2",},
{"lineNum":"   73","line":"        alloc.free(res.stdout);","class":"lineCov","hits":"1","order":"1017","possible_hits":"1",},
{"lineNum":"   74","line":"        alloc.free(res.stderr);","class":"lineCov","hits":"1","order":"1018","possible_hits":"1",},
{"lineNum":"   75","line":"    } else |_| {}"},
{"lineNum":"   76","line":""},
{"lineNum":"   77","line":"    if (!is_mounted) {","class":"lineCov","hits":"1","order":"1019","possible_hits":"1",},
{"lineNum":"   78","line":"        const umount_result = try std.process.Child.run(.{","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   79","line":"            .allocator = alloc,"},
{"lineNum":"   80","line":"            .argv = &.{ \"sudo\", \"umount\", \"mnt\" },"},
{"lineNum":"   81","line":"        });"},
{"lineNum":"   82","line":"        alloc.free(umount_result.stdout);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   83","line":"        alloc.free(umount_result.stderr);","class":"linePartCov","hits":"1","order":"1020","possible_hits":"2",},
{"lineNum":"   84","line":"    }"},
{"lineNum":"   85","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "test", "date" : "2025-03-09 09:32:06", "instrumented" : 39, "covered" : 35,};
var merged_data = [];
