var data = {lines:[
{"lineNum":"    1","line":"const std = @import(\"std\");"},
{"lineNum":"    2","line":""},
{"lineNum":"    3","line":"pub const Opts = struct {"},
{"lineNum":"    4","line":"    leading_newline: bool = false,"},
{"lineNum":"    5","line":"    arr_of_u8_as_str: bool = true,"},
{"lineNum":"    6","line":"    newline_after_fields: bool = true,"},
{"lineNum":"    7","line":"    nesting: usize = 0,"},
{"lineNum":"    8","line":"    first: bool = true,"},
{"lineNum":"    9","line":"    tabs: []const u8 = \"\\t\","},
{"lineNum":"   10","line":"};"},
{"lineNum":"   11","line":""},
{"lineNum":"   12","line":"const buf_size = 3000;"},
{"lineNum":"   13","line":""},
{"lineNum":"   14","line":"pub fn print(x: anytype) void {"},
{"lineNum":"   15","line":"    print_with_opts(x, null);"},
{"lineNum":"   16","line":"}"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"pub fn print_with_opts(x: anytype, options: ?*Opts) void {"},
{"lineNum":"   19","line":"    std.debug.lockStdErr();"},
{"lineNum":"   20","line":"    defer std.debug.unlockStdErr();"},
{"lineNum":"   21","line":"    print_with_writer(std.io.getStdErr().writer(), x, options);"},
{"lineNum":"   22","line":"}"},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"fn print_with_writer(writer: anytype, x: anytype, options: ?*Opts) void {","class":"linePartCov","hits":"18","order":"24","possible_hits":"20",},
{"lineNum":"   25","line":"    const opts = if (options) |o| o else o: { var _o: Opts = .{}; break :o &_o; };","class":"linePartCov","hits":"18","order":"25","possible_hits":"20",},
{"lineNum":"   26","line":"    var buf: [buf_size]u8 = undefined;","class":"linePartCov","hits":"9","order":"26","possible_hits":"10",},
{"lineNum":"   27","line":"    const nesting_depth = opts.nesting;","class":"linePartCov","hits":"9","order":"27","possible_hits":"10",},
{"lineNum":"   28","line":"    const nesting_width = opts.tabs.len;","class":"linePartCov","hits":"9","order":"28","possible_hits":"10",},
{"lineNum":"   29","line":"    if (opts.leading_newline) writer.print(\"\\n\", .{}) catch return;","class":"linePartCov","hits":"18","order":"29","possible_hits":"40",},
{"lineNum":"   30","line":"    var last_nesting_idx: usize = 0;","class":"linePartCov","hits":"9","order":"30","possible_hits":"10",},
{"lineNum":"   31","line":"    for (0..nesting_depth + 2) |nesting_depth_idx| {","class":"linePartCov","hits":"27","order":"31","possible_hits":"40",},
{"lineNum":"   32","line":"        _ = std.fmt.bufPrint(buf[last_nesting_idx..], \"{s}\", .{opts.tabs}) catch return;","class":"linePartCov","hits":"18","order":"32","possible_hits":"20",},
{"lineNum":"   33","line":"        last_nesting_idx = nesting_width * nesting_depth_idx;","class":"linePartCov","hits":"9","order":"33","possible_hits":"20",},
{"lineNum":"   34","line":"    }","class":"linePartCov","hits":"27","order":"34","possible_hits":"30",},
{"lineNum":"   35","line":"    const tabs = buf[0..last_nesting_idx - nesting_width];","class":"linePartCov","hits":"18","order":"35","possible_hits":"30",},
{"lineNum":"   36","line":"    const tabs_next = buf[0..last_nesting_idx];","class":"linePartCov","hits":"27","order":"36","possible_hits":"30",},
{"lineNum":"   37","line":"    const first = opts.first;","class":"linePartCov","hits":"9","order":"37","possible_hits":"10",},
{"lineNum":"   38","line":"    if (first) opts.first = false;","class":"linePartCov","hits":"10","order":"38","possible_hits":"20",},
{"lineNum":"   39","line":""},
{"lineNum":"   40","line":"    const T = @TypeOf(x);"},
{"lineNum":"   41","line":"    const t_info = @typeInfo(T);"},
{"lineNum":"   42","line":"    switch (t_info) {"},
{"lineNum":"   43","line":"        .@\"struct\" => |info| {"},
{"lineNum":"   44","line":"            const fs = info.fields;"},
{"lineNum":"   45","line":"            writer.print(\"{any}{{\\n\", .{T}) catch return;","class":"lineCov","hits":"9","order":"39","possible_hits":"9",},
{"lineNum":"   46","line":"            opts.nesting += 1;","class":"linePartCov","hits":"3","order":"40","possible_hits":"6",},
{"lineNum":"   47","line":"            inline for (fs) |f| {"},
{"lineNum":"   48","line":"                writer.print(\"{s}.{s} = \", .{tabs_next, f.name}) catch return;","class":"lineCov","hits":"30","order":"41","possible_hits":"30",},
{"lineNum":"   49","line":"                print_with_writer(writer, @field(x, f.name), opts);","class":"lineCov","hits":"10","order":"42","possible_hits":"10",},
{"lineNum":"   50","line":"                writer.print(\",\", .{}) catch return;","class":"lineCov","hits":"30","order":"46","possible_hits":"30",},
{"lineNum":"   51","line":"                if (opts.newline_after_fields) writer.print(\"\\n\", .{}) catch return;","class":"linePartCov","hits":"30","order":"47","possible_hits":"40",},
{"lineNum":"   52","line":"            }"},
{"lineNum":"   53","line":"            opts.nesting -= 1;","class":"linePartCov","hits":"3","order":"52","possible_hits":"6",},
{"lineNum":"   54","line":"            writer.print(\"{s}}}\", .{tabs}) catch return;","class":"lineCov","hits":"9","order":"53","possible_hits":"9",},
{"lineNum":"   55","line":"        },"},
{"lineNum":"   56","line":"        .type, .bool, .enum_literal, .@\"opaque\", .@\"frame\", .@\"anyframe\" => writer.print(\"{any}\", .{x}) catch return,"},
{"lineNum":"   57","line":"        .void, .noreturn, .undefined, .null, .@\"fn\" => writer.print(\"{any}\", .{x}) catch return,"},
{"lineNum":"   58","line":"        .int, .float, .comptime_float, .comptime_int => writer.print(\"{d}\", .{x}) catch return,","class":"linePartCov","hits":"6","order":"43","possible_hits":"9",},
{"lineNum":"   59","line":"        .pointer => |info| {"},
{"lineNum":"   60","line":"            switch (info.size) {"},
{"lineNum":"   61","line":"                .one => print_with_writer(writer, x.*, opts),"},
{"lineNum":"   62","line":"                .many, .c => writer.print(\"{any}\", .{x}) catch return,"},
{"lineNum":"   63","line":"                .slice => {"},
{"lineNum":"   64","line":"                    if (info.child == u8 and opts.arr_of_u8_as_str) {","class":"lineCov","hits":"1","order":"49","possible_hits":"1",},
{"lineNum":"   65","line":"                        writer.print(\"\\\"{s}\\\"\", .{x}) catch return;","class":"lineCov","hits":"3","order":"50","possible_hits":"3",},
{"lineNum":"   66","line":"                    } else {"},
{"lineNum":"   67","line":"                        writer.print(\"&[{d}]{any}{any}\", .{x.len, info.child, x}) catch return;","class":"linePartCov","hits":"3","order":"51","possible_hits":"6",},
{"lineNum":"   68","line":"                    }"},
{"lineNum":"   69","line":"                }"},
{"lineNum":"   70","line":"            }"},
{"lineNum":"   71","line":"        },"},
{"lineNum":"   72","line":"        .array => |info| {"},
{"lineNum":"   73","line":"            if (info.child == u8 and opts.arr_of_u8_as_str) {"},
{"lineNum":"   74","line":"                writer.print(\"\\\"{s}\\\"\", .{x}) catch return;"},
{"lineNum":"   75","line":"            } else {"},
{"lineNum":"   76","line":"                writer.print(\"&[{d}]{any}{any}\", .{x.len, info.child, x}) catch return;"},
{"lineNum":"   77","line":"            }"},
{"lineNum":"   78","line":"        },"},
{"lineNum":"   79","line":"        .optional => if (x == null) writer.print(\"{any}\", .{x}) catch return else print_with_writer(writer, x.?, opts),"},
{"lineNum":"   80","line":"        .error_union => if (x) |not_err| print_with_writer(writer, not_err, opts) else |err| writer.print(\"{any}\", .{err}) catch return,"},
{"lineNum":"   81","line":"        .error_set => writer.print(\"{any}\", .{x}) catch return,"},
{"lineNum":"   82","line":"        .@\"enum\" => writer.print(\"{any}\", .{x}) catch return,","class":"lineCov","hits":"3","order":"48","possible_hits":"3",},
{"lineNum":"   83","line":"        .@\"union\" => |info| {"},
{"lineNum":"   84","line":"            if (info.tag_type) |TagType| {"},
{"lineNum":"   85","line":"                const tag: TagType = x;","class":"lineCov","hits":"1","order":"54","possible_hits":"1",},
{"lineNum":"   86","line":"                inline for (info.fields) |f| {"},
{"lineNum":"   87","line":"                    const field_tag = @field(TagType, f.name);","class":"lineCov","hits":"2","order":"55","possible_hits":"2",},
{"lineNum":"   88","line":"                    if (field_tag == tag) {","class":"lineCov","hits":"2","order":"56","possible_hits":"2",},
{"lineNum":"   89","line":"                        writer.print(\"{any}{{\\n{s}.{s} = \", .{T, tabs_next, f.name}) catch return;","class":"linePartCov","hits":"3","order":"59","possible_hits":"6",},
{"lineNum":"   90","line":"                        opts.nesting += 1;","class":"linePartCov","hits":"1","order":"60","possible_hits":"4",},
{"lineNum":"   91","line":"                        print_with_writer(writer, @field(x, f.name), opts);","class":"linePartCov","hits":"2","order":"61","possible_hits":"4",},
{"lineNum":"   92","line":"                        if (opts.newline_after_fields) writer.print(\"\\n\", .{}) catch return;","class":"linePartCov","hits":"3","order":"62","possible_hits":"8",},
{"lineNum":"   93","line":"                        writer.print(\"{s}}}\", .{tabs}) catch return;","class":"linePartCov","hits":"3","order":"63","possible_hits":"6",},
{"lineNum":"   94","line":"                        opts.nesting += 1;","class":"linePartCov","hits":"1","order":"64","possible_hits":"4",},
{"lineNum":"   95","line":"                        break;","class":"linePartCov","hits":"2","order":"57","possible_hits":"4",},
{"lineNum":"   96","line":"                    }"},
{"lineNum":"   97","line":"                }","class":"linePartCov","hits":"2","order":"58","possible_hits":"3",},
{"lineNum":"   98","line":"            }"},
{"lineNum":"   99","line":"        },"},
{"lineNum":"  100","line":"        .vector => {},"},
{"lineNum":"  101","line":"    }"},
{"lineNum":"  102","line":"    if (first) {","class":"linePartCov","hits":"9","order":"44","possible_hits":"10",},
{"lineNum":"  103","line":"        writer.print(\"\\n\", .{}) catch return;","class":"linePartCov","hits":"18","order":"45","possible_hits":"30",},
{"lineNum":"  104","line":"    }"},
{"lineNum":"  105","line":"}"},
{"lineNum":"  106","line":""},
{"lineNum":"  107","line":"const t_utils = @import(\"testing_utils.zig\");"},
{"lineNum":"  108","line":""},
{"lineNum":"  109","line":"test print {","class":"lineCov","hits":"1","order":"13","possible_hits":"1",},
{"lineNum":"  110","line":"    try t_utils.skip_slow_test();","class":"lineCov","hits":"1","order":"14","possible_hits":"1",},
{"lineNum":"  111","line":""},
{"lineNum":"  112","line":"    const E = enum { a, b, c, d };"},
{"lineNum":"  113","line":""},
{"lineNum":"  114","line":"    const C = struct {"},
{"lineNum":"  115","line":"        a3: usize,"},
{"lineNum":"  116","line":"        b3: []const u8,"},
{"lineNum":"  117","line":"    };"},
{"lineNum":"  118","line":""},
{"lineNum":"  119","line":"    const U = union(enum) {"},
{"lineNum":"  120","line":"        a3: f64,"},
{"lineNum":"  121","line":"        b3: []const u8,"},
{"lineNum":"  122","line":"    };"},
{"lineNum":"  123","line":""},
{"lineNum":"  124","line":"    const B = struct {"},
{"lineNum":"  125","line":"        a2: C,"},
{"lineNum":"  126","line":"        b2: U,"},
{"lineNum":"  127","line":"    };"},
{"lineNum":"  128","line":""},
{"lineNum":"  129","line":"    const A = struct {"},
{"lineNum":"  130","line":"        a: usize,"},
{"lineNum":"  131","line":"        b: E,"},
{"lineNum":"  132","line":"        c: []const u8,"},
{"lineNum":"  133","line":"        d: []const u16,"},
{"lineNum":"  134","line":"        e: f32,"},
{"lineNum":"  135","line":"        f: B,"},
{"lineNum":"  136","line":"    };"},
{"lineNum":"  137","line":""},
{"lineNum":"  138","line":"    const a: A = .{"},
{"lineNum":"  139","line":"        .a = 15,"},
{"lineNum":"  140","line":"        .b = .d,"},
{"lineNum":"  141","line":"        .c = \"hello, world!\","},
{"lineNum":"  142","line":"        .d = &[_]u16 { 5, 6, 7, 8, 9 },"},
{"lineNum":"  143","line":"        .e = 0.5,"},
{"lineNum":"  144","line":"        .f = .{"},
{"lineNum":"  145","line":"            .a2 = .{"},
{"lineNum":"  146","line":"                .a3 = 0,"},
{"lineNum":"  147","line":"                .b3 = \"elo\","},
{"lineNum":"  148","line":"            },"},
{"lineNum":"  149","line":"            .b2 = .{ .b3 = \"simea\" },"},
{"lineNum":"  150","line":"        }"},
{"lineNum":"  151","line":"    };"},
{"lineNum":"  152","line":"    const expected =","class":"lineCov","hits":"1","order":"19","possible_hits":"1",},
{"lineNum":"  153","line":"        \\\\printer.decltest.print.A{"},
{"lineNum":"  154","line":"        \\\\  .a = 15,"},
{"lineNum":"  155","line":"        \\\\  .b = printer.decltest.print.E.d,"},
{"lineNum":"  156","line":"        \\\\  .c = \"hello, world!\","},
{"lineNum":"  157","line":"        \\\\  .d = &[5]u16{ 5, 6, 7, 8, 9 },"},
{"lineNum":"  158","line":"        \\\\  .e = 0.5,"},
{"lineNum":"  159","line":"        \\\\  .f = printer.decltest.print.B{"},
{"lineNum":"  160","line":"        \\\\    .a2 = printer.decltest.print.C{"},
{"lineNum":"  161","line":"        \\\\      .a3 = 0,"},
{"lineNum":"  162","line":"        \\\\      .b3 = \"elo\","},
{"lineNum":"  163","line":"        \\\\    },"},
{"lineNum":"  164","line":"        \\\\    .b2 = printer.decltest.print.U{"},
{"lineNum":"  165","line":"        \\\\      .b3 = \"simea\""},
{"lineNum":"  166","line":"        \\\\    },"},
{"lineNum":"  167","line":"        \\\\  },"},
{"lineNum":"  168","line":"        \\\\}"},
{"lineNum":"  169","line":"        \\\\"},
{"lineNum":"  170","line":"    ;"},
{"lineNum":"  171","line":""},
{"lineNum":"  172","line":"    const t = std.testing;"},
{"lineNum":"  173","line":"    var buf = std.ArrayList(u8).init(t.allocator);","class":"lineCov","hits":"1","order":"20","possible_hits":"1",},
{"lineNum":"  174","line":"    defer buf.deinit();","class":"linePartCov","hits":"1","order":"66","possible_hits":"2",},
{"lineNum":"  175","line":"    const writer = buf.writer();","class":"lineCov","hits":"1","order":"21","possible_hits":"1",},
{"lineNum":"  176","line":"    var opts: Opts = .{","class":"lineCov","hits":"1","order":"22","possible_hits":"1",},
{"lineNum":"  177","line":"        .tabs = \"  \","},
{"lineNum":"  178","line":"    };"},
{"lineNum":"  179","line":"    print_with_writer(writer, a, &opts);","class":"lineCov","hits":"1","order":"23","possible_hits":"1",},
{"lineNum":"  180","line":"    try t.expectEqualStrings(expected, buf.items);","class":"linePartCov","hits":"1","order":"65","possible_hits":"2",},
{"lineNum":"  181","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "test", "date" : "2025-03-09 09:32:06", "instrumented" : 50, "covered" : 50,};
var merged_data = [];
